/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/* 
 * File:   main.cpp
 * Author: Zach Ellis
 *
 * Created on November 11, 2016, 1:10 AM
 */

#include <cstdlib>

using namespace std;

/*
 * 
 */
#include <iostream>
using namespace std;
#include <stdio.h>  
#include <math.h>
#include <string.h>  
   

int pow(int, int );


template<class T> int size(T *ptr)//int size(const char *ptr)
{
    //iterator
    int i = 0;
    
    int count = 0;

    //While loop that tests whether the end of the array has been reached
   while (*(ptr + i) != '\0')
    {
        //increment the count variable
        ++count;
        //advance to the next element of the array
        ++i;
    } 
    //return the size of the array
    return count;
}
//int size(char *);

//Idk if I'm over thinking not using libraries. this is pretty annoying shit
char * constCopy(const char *);

char * intToChar(int );
char * Convert(const char *);

int main() {
	// your code goes here
	char *str = "five and six";
	cout << size(str)<<endl;
        
        //not what I wanted
        int i = 65;
        char c = i;
        printf("%c", c);
	
	const char *hexadecimal = new char[30];
        hexadecimal = "240f";  
	
        cout << endl << Convert(hexadecimal) << endl;

	char *decimalNumber  = new char[40];
    //printf("Enter a Hexadecimal Number\n");  
    //scanf("%s", hexadecimal);  
    
    
    decimalNumber = Convert(hexadecimal);
	
	return 0;
}

int pow(int base, int exponent)
{
    int result=0;
    
    //Loop multiply the base by itself.
    while (exponent != 0)
    {
        result *= base;
        --exponent;
    }
    return result;
}

/*template<class T> int size(T *ptr)//int size(const char *ptr)
{
    //iterator
    int i = 0;
    
    int count = 0;

    //While loop that tests whether the end of the array has been reached
   while (*(ptr + i) != '\0')
    {
        //increment the count variable
        ++count;
        //advance to the next element of the array
        ++i;
    } 
    //return the size of the array
    return count;
}*/

//Idk if I'm over thinking not using libraries. this is pretty annoying shit
char * constCopy(const char *ptr) 
{
    //iterator
    int i = 0;
    int strSize = 0;
    strSize = size(ptr);
    
  char *copy = new char [strSize];
    
    int count = 0;

    //While loop that tests whether the end of the array has been reached
   while (*(ptr + i) != '\0')
    {
        //increment the count variable
        copy[i]=ptr[i];
        //advance to the next element of the array
        ++i;
    } 
    //return the size of the array
    return copy;
}

char * intToChar(int number)
{
     char text[] = "StringX";
   int digit;
   for (digit = 0; digit < 10; ++digit)
   {
      text[6] = digit + '0';
      puts(text);
   }
}

char * Convert(const char *pHexString)
{
    //do i even need a copy? why did i make all these functions to copy it?
    //I remember I was having trouble with the const typing. did i need to solve that this way?
    char *copy = constCopy(pHexString);
    long decimalNumber=0;
    
    char hexDigits[16] = {'0', '1', '2', '3', '4', '5', '6', '7', '8',
      '9', 'A', 'B', 'C', 'D', 'E', 'F'};
    
    char *hexDigs = "0123456789ABCDEF";

    
    int i, j, power=0, digit;  
    int hexStrSize = size(copy);
 
    cout << hexStrSize << endl;
    cout << decimalNumber<<endl;
    /* Converting hexadecimal number to decimal number */
    for(i=hexStrSize-1; i >= 0; i--) {
        /*search currect character in hexDigits array */
        for(j=0; j<16; j++){
            if(copy[i] == hexDigits[j]){
                decimalNumber += j*pow(16, power);
            }
        }
        power++;
    } 
  
    printf("Decimal Number : %ld", decimalNumber);  
    return copy;
}
